Given an array arr. Find the majority element in the array. If no majority exists, return -1. A majority element in an array is an element that appears strictly more than arr.size() / 2 times in the array.

Examples : 

Input : arr[] = {1, 1, 2, 1, 3, 5, 1}
Output : 1
Explanation: Note that 1 appear 4 times which is more than 7 / 2 times 

Input : arr[] = {3, 3, 4, 2, 4, 4, 2, 4}
Output : -1
Explanation: There is no element whose frequency is greater than the half of the size of the array size.

Input : arr[] = {3}
Output : 3
Explanation: Appears more than n/2 times

code:
import java.util.*;
public class Main
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner (System.in);
        HashMap<Integer,Integer> map=new HashMap<>();
        int n=sc.nextInt();
        int k=n/2;
        int arr[] =new int[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=sc.nextInt();
        }
        for(int i:arr){
            if(!map.containsKey(i))
            {
                map.put(i,1);
            }
            else{
                map.put(i,map.get(i)+1);
            }
        }
        for(int i:map.keySet())
        {
            if(map.get(i)>k)
            {
                System.out.print(i);
               break;
            }
            else if(map.get(i)<k)
            {
                System.out.print(-1);
                break;
            }
        }
        
    }
}
